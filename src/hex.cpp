#include "../include/maddsua/hex.hpp"

const uint8_t binhex_table[2][256] = {

	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',
	'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f',

	'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0',
	'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1',
	'2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2',
	'3','3','3','3','3','3','3','3','3','3','3','3','3','3','3','3',
	'4','4','4','4','4','4','4','4','4','4','4','4','4','4','4','4',
	'5','5','5','5','5','5','5','5','5','5','5','5','5','5','5','5',
	'6','6','6','6','6','6','6','6','6','6','6','6','6','6','6','6',
	'7','7','7','7','7','7','7','7','7','7','7','7','7','7','7','7',
	'8','8','8','8','8','8','8','8','8','8','8','8','8','8','8','8',
	'9','9','9','9','9','9','9','9','9','9','9','9','9','9','9','9',
	'a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a',
	'b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b',
	'c','c','c','c','c','c','c','c','c','c','c','c','c','c','c','c',
	'd','d','d','d','d','d','d','d','d','d','d','d','d','d','d','d',
	'e','e','e','e','e','e','e','e','e','e','e','e','e','e','e','e',
	'f','f','f','f','f','f','f','f','f','f','f','f','f','f','f','f'
};

const uint8_t hexbin_table[256] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0,
	0,
	0b00001010, 0b00001011, 0b00001100, 0b00001101,
	0b00001110, 0b00001111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0b00001010, 0b00001011, 0b00001100, 0b00001101,
	0b00001110, 0b00001111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0
};

std::string maddsua::binToHex(const uint8_t* data, const size_t length) {
	std::string result;
		result.resize(length * 2);
	
	for (size_t m = 0, n = 0; m < length; m++, n += 2) {
		result[n] = binhex_table[1][data[m]];
		result[n + 1] = binhex_table[0][data[m]];
	}

	return result;
}

std::vector <uint8_t> maddsua::hexToBin(std::string& data) {
	std::vector <uint8_t> result;
		result.resize(data.size() / 2, 0);

	for (size_t m = 0, n = 0; m < data.size(); m++, n += 2) {
		result[m] |= hexbin_table[data[n]] << 4;
		result[m] |= hexbin_table[data[n + 1]];
	}
	
	return result;
}